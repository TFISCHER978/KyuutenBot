# Work with Python 3.6
import random
import asyncio
from io import BytesIO
from PIL import Image

import aiohttp
import json
import discord
import requests
from discord.ext import commands

from discord.ext.commands import Bot
from discord.utils import get

from kyuutenbot.Config import *

BOT_PREFIX = '$'

client = Bot(command_prefix=BOT_PREFIX)


@client.command()
async def test():
    embed = discord.Embed(title="Embed", url="https://cog-creators.github.io/discord-embed-sandbox/",
                          description="Embed creator",
                          color=0x8000ff)
    embed.set_footer(text="Footer")
    await client.say(embed=embed)


@client.command(description="Return name and key from champ ; case insensitive", pass_context=True)
async def champ(ctx, *, name: str):
    r = requests.get("http://ddragon.leagueoflegends.com/cdn/" + CURRENT_PATCH + "/data/en_US/champion.json")
    data = json.loads(r.text)
    name = name.capitalize()
    await client.say("id : " + data['data'][name]['id'] + " \nkey : " + data['data'][name]['key'] + " \nname : " +
                     data['data'][name]['name'])

    e = discord.Embed()
    e.set_image(url="http://ddragon.leagueoflegends.com/cdn/" + CURRENT_PATCH + "/img/champion/" +
                    data['data'][name]['id'] + ".png")

    await client.say(embed=e)


@champ.error
async def champ_error(error, ctx):
    if isinstance(error, commands.MissingRequiredArgument):
        await client.say(
            embed=discord.Embed(title="ERROR", description="ERROR: Champion name not defined", color=0xc81e3c))
    else:
        print(error)
    #    await client.say(embed=discord.Embed(title="ERROR", description="ERROR: Champion name unknown ¯\_(ツ)_/¯", color=0xc81e3c))


@client.event
async def on_message(message):
    response = requests.get("http://ddragon.leagueoflegends.com/cdn/8.24.1/img/champion/Neeko.png")
    img = Image.open(BytesIO(response.content))

    await client.create_custom_emoji(client.get_server(SERVERID), name="Neeko", image=img)
    emoji = get(client.get_all_emojis(), name="Neeko")
    await client.add_reaction(message, emoji)


@client.command()
async def patch():
    await client.say("The current patch is : " + CURRENT_PATCH)


@client.event
async def on_member_update(before, after):
    if after.game == None:
        return
    else:
        content = str(after.name) + " is now playing : " + str(after.game)
        await client.send_message(client.get_channel(CHANNELID), content)


@client.event
async def on_ready():
    global CURRENT_PATCH

    await client.change_presence(game=discord.Game(name=BOT_PREFIX + "help", type=2))
    print("Logged in as " + client.user.name)

    r = requests.get("http://ddragon.leagueoflegends.com/api/versions.json")
    data = json.loads(r.text)
    CURRENT_PATCH = str(data[0])
    print("Current patchc: " + CURRENT_PATCH)


async def list_servers():
    global SERVERID
    global CHANNELID

    await client.wait_until_ready()

    while not client.is_closed:
        # print("Current servers:")

        for server in client.servers:
            # print(server.name + " : " + server.id)

            if server.name == SERVERNAME:
                SERVERID = str(server.id)
                print("Set default server id to : " + SERVERID)

                for channel in server.channels:
                    # print(channel.name + " : " + channel.id)

                    if channel.name == CHANNELNAME:
                        CHANNELID = str(channel.id)
                        print("Set default channel id to : " + CHANNELID)

        await asyncio.sleep(600)


client.loop.create_task(list_servers())
client.run(TOKEN)
